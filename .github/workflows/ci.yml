name: Next.js Build & Artifact Creation


# 1. Workflow Triggers
on:
  push:
    branches: [ main ]          # Trigger on push to the main branch
  pull_request:
    branches: [ main ]          # Trigger on PRs targeting the main branch
  workflow_dispatch:            # Allows manual runs from the GitHub UI for testing or debugging

# 2. Concurrency Management
# Prevents multiple overlapping workflow runs for the same branch/PR,
# ensuring only the latest commit is processed.

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# 3. Jobs Definition
jobs:
  build:
    name: Build, Lint, and Create Production Artifact
    runs-on: ubuntu-latest # Executes the job on a fresh Linux virtual machine

    steps:
      # Step 1: Checkout Code
      - name: Checkout repository
        uses: actions/checkout@v4 # Action to clone the repository code

      # Step 2: Set up Node.js Environment with Built-in Caching
      # Uses Node.js 18 and leverages the 'npm' caching feature for global dependencies (~/.npm).
      # This is the modern, simpler alternative to using actions/cache for the global npm directory.
      - name: Use Node.js 18.x and Cache npm modules
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm' # Enables caching for the npm package manager

      # Step 3: Cache Local Dependencies and Next.js Build Data
      # This is critical for speeding up subsequent runs by reusing node_modules and Next.js caches.
      - name: Cache Next.js build cache and node_modules
        uses: actions/cache@v4
        with:
          path: |
            .next/cache      # Next.js specific cache files for build optimization
            node_modules       # Local installed dependencies
          # Key is based on OS and the hash of the package-lock.json for reliable cache invalidation
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 4: Install Dependencies
      # 'npm ci' ensures a clean, fast, and reproducible installation based on the lock file.
      - name: Install dependencies
        run: npm ci

      # Step 5: Run Code Quality Checks (Linting)
      # Essential check to enforce coding standards before proceeding to the build.
      - name: Lint
        run: npm run lint

      # Step 6: Build Next.js project
      # Creates the optimized, server-ready code in the `.next` directory.
      - name: Build Next.js project
        run: npm run build

      # Step 7: Create a previewable source package (non-fatal)
      # This archive contains the repository source (excluding node_modules,
      # .git, and .next) along with an INSTALL.md that tells the downloader
      # how to install dependencies and run the project locally with
      # `npm run dev` for quick inspection.
      - name: Create INSTALL.md
        run: |
          cat > INSTALL.md <<'EOF'
          # Preview Instructions

          This archive contains the source for the Project Harmony frontend.

          To preview locally:

          1. Extract the archive:
             unzip project-harmony-frontend-preview.zip -d project-harmony-frontend-preview

          2. Change into the project folder:
             cd project-harmony-frontend-preview

          3. Install dependencies (recommended):
             npm ci

          4. Start the dev server (recommended for local preview):
             npm run dev

          5. Open http://localhost:3000 in your browser (or the port shown by Next.js).

          Notes:
          - The dev server requires Node.js (v18 recommended).
          - If you prefer a production-like preview, run `npm run build` then
            `npm start` (this requires the same Node environment).
          EOF

      - name: Package source preview zip
        run: |
          # Create a zip of the repository root but exclude node_modules, .git, and .next
          ZIP_NAME=project-harmony-frontend-preview.zip
          zip -r "$ZIP_NAME" . -x "node_modules/*" ".git/*" ".next/*" "$ZIP_NAME" || true

      - name: Upload previewable source artifact
        uses: actions/upload-artifact@v4
        with:
          name: project-harmony-frontend-preview
          path: project-harmony-frontend-preview.zip
            
